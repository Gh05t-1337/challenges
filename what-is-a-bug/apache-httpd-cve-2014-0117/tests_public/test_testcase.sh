#!/bin/bash
set -euo pipefail

INIT_LOG=$(mktemp)

cleanup() {
  if [[ -n "${svc_pid:-}" ]] && kill -0 "$svc_pid" 2>/dev/null; then
    kill "$svc_pid" 2>/dev/null || true
    wait "$svc_pid" 2>/dev/null || true
  fi
  if [[ -s "$INIT_LOG" ]]; then
    echo "--- .init output ---" >&2
    cat "$INIT_LOG" >&2 || true
  fi
  if [[ -f /opt/httpd/logs/error_log ]]; then
    echo "--- Apache error_log ---" >&2
    tail -n 60 /opt/httpd/logs/error_log >&2 || true
  fi
  rm -f "$INIT_LOG"
}
trap cleanup EXIT

/challenge/.init >"$INIT_LOG" 2>&1 &
svc_pid=$!

retry() {
  local tries="$1" delay="$2"; shift 2
  for ((i=1; i<=tries; i++)); do
    if "$@"; then return 0; fi
    sleep "$delay"
  done
  return 1
}

retry 120 0.25 curl -fsS http://127.0.0.1:9000/health >/dev/null

sleep 1

retry 120 0.25 bash -c "curl -fsS --resolve challenge.localhost:80:127.0.0.1 http://challenge.localhost/health | grep -qx OK"

if /challenge/bin/win; then
  echo "Expected flag to be unavailable before crash" >&2
  exit 1
fi
